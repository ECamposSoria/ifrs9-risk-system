[pytest]
# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Output and logging
addopts = 
    --verbose
    --tb=short
    --strict-markers
    --strict-config
    --color=yes
    --durations=10
    --cov=src
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-fail-under=80
    --junitxml=test-results.xml

# Markers
markers =
    spark: marks tests as requiring Spark session
    slow: marks tests as slow running (>10s)
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    validation: marks tests for data validation
    ml: marks tests for ML model components
    docker: marks tests that require running Docker containers

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Warnings - optimized for PySpark compatibility
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::FutureWarning:pyspark.*
    ignore::UserWarning:pyspark.*
    ignore::UserWarning:pandas.*
    ignore::ResourceWarning
    ignore:Found unknown categories in columns.*:UserWarning
    ignore::sklearn.exceptions.UndefinedMetricWarning
    ignore::UserWarning:sklearn.base
    ignore::UserWarning:sklearn.preprocessing._encoders

# Test execution
minversion = 6.0
timeout = 300
