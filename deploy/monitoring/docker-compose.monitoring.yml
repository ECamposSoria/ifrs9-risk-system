version: '3.8'

networks:
  ifrs9-monitoring:
    driver: bridge

volumes:
  prometheus-data:
  grafana-data:

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: ifrs9-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ../../monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ../../monitoring/ifrs9_alerting_rules.yml:/etc/prometheus/ifrs9_alerting_rules.yml:ro
      - ../../monitoring/ifrs9_recording_rules.yml:/etc/prometheus/ifrs9_recording_rules.yml:ro
      - prometheus-data:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --storage.tsdb.retention.time=90d
      - --web.enable-lifecycle
    restart: unless-stopped
    networks: [ifrs9-monitoring]

  grafana:
    image: grafana/grafana:latest
    container_name: ifrs9-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ../../monitoring/grafana-dashboards-agents.json:/etc/grafana/provisioning/dashboards/ifrs9-agents.json:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-ifrs9admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    networks: [ifrs9-monitoring]

  alertmanager:
    image: prom/alertmanager:latest
    container_name: ifrs9-alertmanager
    ports:
      - "9093:9093"
    restart: unless-stopped
    networks: [ifrs9-monitoring]

  node-exporter:
    image: prom/node-exporter:latest
    container_name: ifrs9-node-exporter
    ports:
      - "9100:9100"
    restart: unless-stopped
    networks: [ifrs9-monitoring]

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: ifrs9-cadvisor
    ports:
      - "8089:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    restart: unless-stopped
    networks: [ifrs9-monitoring]

