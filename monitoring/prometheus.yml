# Prometheus Configuration for IFRS9 Risk Management System
# Production-ready monitoring setup for all IFRS9 services and agents

global:
  scrape_interval: 30s
  evaluation_interval: 30s
  external_labels:
    cluster: 'ifrs9-production'
    environment: 'prod'

# Rule files for alerting
rule_files:
  - "ifrs9_alerting_rules.yml"
  - "ifrs9_recording_rules.yml"

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

# Scrape configurations for all IFRS9 components
scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 15s

  # Node Exporter for system metrics
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 15s
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        regex: '([^:]+)(:[0-9]+)?'
        replacement: '${1}'

  # Apache Airflow metrics
  - job_name: 'airflow-webserver'
    static_configs:
      - targets: ['airflow:8080']
    metrics_path: /admin/metrics/
    scrape_interval: 30s
    scrape_timeout: 10s
    params:
      format: ['prometheus']
    basic_auth:
      username: 'admin'
      password: 'admin'

  - job_name: 'airflow-scheduler'
    static_configs:
      - targets: ['airflow-scheduler:8793']
    metrics_path: /metrics
    scrape_interval: 30s

  # IFRS9 API Server metrics
  - job_name: 'ifrs9-api'
    static_configs:
      - targets: ['ifrs9-api:8000']
    metrics_path: /metrics
    scrape_interval: 15s
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'ifrs9-api'

  # IFRS9 Specialized Agents metrics
  - job_name: 'ifrs9-rules-engine'
    static_configs:
      - targets: ['ifrs9-rules-engine:8001']
    metrics_path: /metrics
    scrape_interval: 30s
    metric_relabel_configs:
      - source_labels: [__name__]
        target_label: agent
        replacement: 'rules-engine'

  - job_name: 'ifrs9-data-generator'
    static_configs:
      - targets: ['ifrs9-data-generator:8002']
    metrics_path: /metrics
    scrape_interval: 30s
    metric_relabel_configs:
      - source_labels: [__name__]
        target_label: agent
        replacement: 'data-generator'

  - job_name: 'ifrs9-ml-models'
    static_configs:
      - targets: ['ifrs9-ml-models:8003']
    metrics_path: /metrics
    scrape_interval: 30s
    metric_relabel_configs:
      - source_labels: [__name__]
        target_label: agent
        replacement: 'ml-models'

  - job_name: 'ifrs9-validator'
    static_configs:
      - targets: ['ifrs9-validator:8004']
    metrics_path: /metrics
    scrape_interval: 30s
    metric_relabel_configs:
      - source_labels: [__name__]
        target_label: agent
        replacement: 'validator'

  - job_name: 'ifrs9-integrator'
    static_configs:
      - targets: ['ifrs9-integrator:8005']
    metrics_path: /metrics
    scrape_interval: 15s  # More frequent for integration monitoring
    metric_relabel_configs:
      - source_labels: [__name__]
        target_label: agent
        replacement: 'integrator'

  - job_name: 'ifrs9-orchestrator'
    static_configs:
      - targets: ['ifrs9-orchestrator:8006']
    metrics_path: /metrics
    scrape_interval: 15s  # More frequent for orchestration monitoring
    metric_relabel_configs:
      - source_labels: [__name__]
        target_label: agent
        replacement: 'orchestrator'

  - job_name: 'ifrs9-reporter'
    static_configs:
      - targets: ['ifrs9-reporter:8007']
    metrics_path: /metrics
    scrape_interval: 30s
    metric_relabel_configs:
      - source_labels: [__name__]
        target_label: agent
        replacement: 'reporter'

  - job_name: 'ifrs9-debugger'
    static_configs:
      - targets: ['ifrs9-debugger:8008']
    metrics_path: /metrics
    scrape_interval: 30s
    metric_relabel_configs:
      - source_labels: [__name__]
        target_label: agent
        replacement: 'debugger'

  # PostgreSQL Exporter for database metrics
  - job_name: 'postgres-exporter'
    static_configs:
      - targets: ['postgres-exporter:9187']
    scrape_interval: 30s
    relabel_configs:
      - source_labels: [__address__]
        target_label: database
        replacement: 'postgresql'

  # Redis Exporter for cache metrics
  - job_name: 'redis-exporter'
    static_configs:
      - targets: ['redis-exporter:9121']
    scrape_interval: 30s
    relabel_configs:
      - source_labels: [__address__]
        target_label: cache
        replacement: 'redis'

  # BigQuery and GCS monitoring via custom exporter
  - job_name: 'gcp-exporter'
    static_configs:
      - targets: ['gcp-exporter:9090']
    metrics_path: /metrics
    scrape_interval: 60s  # Less frequent for GCP APIs
    params:
      project: ['ifrs9-production']
    relabel_configs:
      - source_labels: [__address__]
        target_label: cloud_provider
        replacement: 'gcp'

  # Kubernetes cluster metrics (if deployed on k8s)
  - job_name: 'kubernetes-apiservers'
    kubernetes_sd_configs:
      - role: endpoints
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        action: keep
        regex: default;kubernetes;https

  - job_name: 'kubernetes-nodes'
    kubernetes_sd_configs:
      - role: node
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - target_label: __address__
        replacement: kubernetes.default.svc:443
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/${1}/proxy/metrics

  - job_name: 'kubernetes-pods'
    kubernetes_sd_configs:
      - role: pod
    relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::[0-9]+)?;([0-9]+)
        replacement: $1:$2
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: kubernetes_pod_name

  # Custom IFRS9 business metrics
  - job_name: 'ifrs9-business-metrics'
    static_configs:
      - targets: ['ifrs9-metrics-collector:9091']
    metrics_path: /business-metrics
    scrape_interval: 60s  # Business metrics don't need high frequency
    params:
      format: ['prometheus']

  # Polars performance metrics
  - job_name: 'ifrs9-polars-metrics'
    static_configs:
      - targets: ['ifrs9-polars-exporter:9092']
    metrics_path: /polars-metrics
    scrape_interval: 30s
    relabel_configs:
      - source_labels: [__address__]
        target_label: data_engine
        replacement: 'polars'

# Storage configuration
storage:
  tsdb:
    path: /prometheus/data
    retention.time: 90d
    retention.size: 50GB
    wal-compression: true

# Remote write configuration (for long-term storage)
remote_write:
  - url: "https://prometheus-remote-write.googleapis.com/v1/projects/ifrs9-production/location/us-central1-a/clusters/ifrs9-cluster/prometheus/api/v1/write"
    queue_config:
      max_samples_per_send: 10000
      max_shards: 200
      capacity: 100000
    write_relabel_configs:
      - source_labels: [__name__]
        regex: 'ifrs9.*|airflow.*|node.*'
        action: keep
    metadata_config:
      send: true
      send_interval: 30s

# Tracing configuration (for distributed tracing)
tracing:
  endpoint: "jaeger:14268/api/traces"
  
# Feature flags
feature_flags:
  - enable-feature=remote-write-receiver
  - enable-feature=exemplar-storage